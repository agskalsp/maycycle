docker build --build-arg JAR_FILE=/target/ -t myimage:v1 .

FROM openjdk:11
WORKDIR /app
ARG JAR_FILE
COPY ${JAR_FILE} app.jar
EXPOSE 8080
ENTRYPOINT ["java", "-jar", "/app/app.jar"]


-------------- Node JS ------------
# Use an official Node.js runtime as a parent image
FROM node:14-alpine
#RUN apt-get install --no-install-recommends apt-utils --yes \
    #&& apt-get install --no-install-recommends npm --yes
# Set the working directory to /app
WORKDIR /app
# Copy package.json and package-lock.json to the container
COPY package*.json ./
RUN npm install
# Install any needed packages
# Copy the rest of the application code to the container
COPY . .
EXPOSE 3001
# Set the command to run the application
CMD ["npm", "start"]


---------------  ANGULAR JS ---------------

# Stage 1: Build the Angular app
FROM node:14 as myapp
WORKDIR /angular
COPY . .
#RUN npm install -g @angular/cli@<angular-cli-version>  # Install Angular CLI globally
RUN npm cache clean --force
RUN npm install --package-lock-only
RUN npm ci
#Run npm install -g npm@9.6.7
RUN npm run  build --prod
# Stage 2: Serve the Angular app using Ngin x
FROM nginx
COPY --from=myapp /angular/dist/angular /usr/share/nginx/html

-------- package.json  -----------

{
  "name": "angular",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "build": "ng build",
    "start": "ng serve --host 0.0.0.0 --port 8000 --disable-host-check",
    "test": "ng test --watch=false"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "~11.2.7",
    "@angular/common": "~11.2.7",
    "@angular/compiler": "~11.2.7",
    "@angular/core": "~11.2.7",
    "@angular/forms": "~11.2.7",
    "@angular/platform-browser": "~11.2.7",
    "@angular/platform-browser-dynamic": "~11.2.7",
    "@angular/router": "~11.2.7",
    "bootstrap": "^4.6.0",
    "font-awesome": "^4.7.0",
    "jquery": "^3.6.0",
    "popper.js": "^1.16.1",
    "rxjs": "~6.6.0",
    "tslib": "^2.0.0",
    "zone.js": "~0.11.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.1102.6",
    "@angular/cli": "~11.2.6",
    "@angular/compiler-cli": "~11.2.7",
    "@types/jasmine": "~3.6.0",
    "@types/node": "^12.11.1",
    "codelyzer": "^6.0.0",
    "jasmine-core": "~3.8.0",
    "jasmine-spec-reporter": "~5.0.0",
    "karma": "~6.1.0",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage": "~2.0.3",
    "karma-jasmine": "~4.0.0",
    "karma-jasmine-html-reporter": "^1.7.0",
    "karma-junit-reporter": "^2.0.1",
    "protractor": "~7.0.0",
    "ts-node": "~8.3.0",
    "tslint": "~6.1.0",
    "typescript": "~4.1.5"
  }
}

----------- FLASK IMAGE ----------

FROM python:3.9

WORKDIR /app

COPY requirements.txt .

RUN pip install --no-cache-dir -r requirements.txt

COPY . .

ENV FLASK_APP=app.py

CMD ["flask","run","--host=0.0.0.0"]