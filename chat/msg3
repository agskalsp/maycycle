STILL errors vastunai



python3 -m pytest test.py
============================= test session starts ==============================
platform linux -- Python 3.6.9, pytest-5.3.5, py-1.8.1, pluggy-0.13.1
rootdir: /home/labuser/Desktop/Project/wingst5-may2023-s1h1
plugins: cov-2.12.1
collected 13 items                                                             

test.py ..........FF.                                                    [100%]

=================================== FAILURES ===================================
___________________________ TestAPI.test_update_task ___________________________

self = <test.TestAPI object at 0x7f7f0d926a90>

    def test_update_task(self):
>       response = self.client.put('/update/task/5')

test.py:98: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../../../.local/lib/python3.6/site-packages/werkzeug/test.py:1026: in put
    return self.open(*args, **kw)
../../../.local/lib/python3.6/site-packages/flask/testing.py:227: in open
    follow_redirects=follow_redirects,
../../../.local/lib/python3.6/site-packages/werkzeug/test.py:970: in open
    response = self.run_wsgi_app(environ.copy(), buffered=buffered)
../../../.local/lib/python3.6/site-packages/werkzeug/test.py:861: in run_wsgi_app
    rv = run_wsgi_app(self.application, environ, buffered=buffered)
../../../.local/lib/python3.6/site-packages/werkzeug/test.py:1096: in run_wsgi_app
    app_rv = app(environ, start_response)
../../../.local/lib/python3.6/site-packages/flask/app.py:2463: in __call__
    return self.wsgi_app(environ, start_response)
../../../.local/lib/python3.6/site-packages/flask/app.py:2449: in wsgi_app
    response = self.handle_exception(e)
../../../.local/lib/python3.6/site-packages/flask/app.py:1866: in handle_exception
    reraise(exc_type, exc_value, tb)
../../../.local/lib/python3.6/site-packages/flask/_compat.py:39: in reraise
    raise value
../../../.local/lib/python3.6/site-packages/flask/app.py:2446: in wsgi_app
    response = self.full_dispatch_request()
../../../.local/lib/python3.6/site-packages/flask/app.py:1951: in full_dispatch_request
    rv = self.handle_user_exception(e)
../../../.local/lib/python3.6/site-packages/flask/app.py:1820: in handle_user_exception
    reraise(exc_type, exc_value, tb)
../../../.local/lib/python3.6/site-packages/flask/_compat.py:39: in reraise
    raise value
../../../.local/lib/python3.6/site-packages/flask/app.py:1949: in full_dispatch_request
    rv = self.dispatch_request()
../../../.local/lib/python3.6/site-packages/flask/app.py:1935: in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

id = 5

    @app.route('/update/task/<int:id>', methods=['PUT'])
    def updatetask(id: int):
        data = request.get_json()
>       title = data['title']
E       TypeError: 'NoneType' object is not subscriptable

app.py:75: TypeError
___________________________ TestAPI.test_filter_task ___________________________

self = <test.TestAPI object at 0x7f7f0d800860>

    def test_filter_task(self):
        response = self.client.get('/filter/task/Done')
        assert response.status_code == 404
        data = json.loads(response.data)
        assert data == {'message': 'The status you entered does not exist'}
    
        response = self.client.get('/filter/task/Backlog')
        assert response.status_code == 200
        expected_data = [
            {"assignto": "Mark", "id": 1, "priority": "Urgent", "status": "Backlog", "title": "Fix Bug"}
        ]
        data = json.loads(response.data)
>       assert data == expected_data
E       AssertionError: assert [{'assignto':...acklog', ...}] == [{'assignto':...acklog', ...}]
E         Left contains 2 more items, first extra item: {'assignto': 'John', 'id': 2, 'priority': 'Low', 'status': 'Backlog', ...}
E         Use -v to get the full diff

test.py:121: AssertionError
========================= 2 failed, 11 passed in 0.74s =========================
