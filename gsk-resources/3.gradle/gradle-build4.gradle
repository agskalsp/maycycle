CONTENT OF archiving.gradle
--------------------------------------
apply plugin: 'base' // ******* IMPORTANT
 
task copyDocs(type: Copy) {
    from "src"
    into "build/docs"
    include "**/*.md"
    includeEmptyDirs = false
}

task createZip(type: Zip) {
    from "build/docs"
    archiveFileName = "docs.zip"
    destinationDirectory = file("build/dist")
    dependsOn copyDocs
}

CONTENT OF implement.gradle
-------------------------------------
apply from: "archiving.gradle"

Then in folder: /implement/:->  we can use tasks of archiving.gradle directly

-------------------------------
PUBLISHING IN GRADLE:
--------------------------------
plugins {
    id 'maven-publish'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.linkedinlearning'
            artifactId = 'calculator'
            from components.java
        }
    }
    repositories {
        /*maven {
            url = "$rootProject.buildDir/m2repo"
        }*/
        maven {
            url = 'http://localhost:8082/artifactory/libs-release-local/'
            credentials {
                username = 'admin'
                password = 'admin_123'
            }
        }
    }
}

TESTING IN GRADLE:
--------------------------
dependencies {
    implementation 'commons-cli:commons-cli:1.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform() //--> helps in choosing junit 5 instead of junit 4?

    testLogging {
        events 'started', 'skipped', 'failed'
    }
}

SCM IN GRADLE:
-------------
scm {
    connection = 'scm:git:git://example.com/my-library.git'
    developerConnection = 'scm:git:ssh://example.com/my-library.git'
    url = 'http://example.com/my-library/'
}

PUBLISHING GRADLE Artifacts to NEXUS
--------------------------------------
https://docs.gradle.org/current/userguide/publishing_maven.html
--------------------------------------
apply plugin: 'java'
apply plugin: 'maven'

repositories {
    maven {
          url "http://localhost:8081/nexus/content/groups/public"
    }
}

dependencies {
    testCompile "junit:junit:3.8.1"
    compile "org.jbundle.util:org.jbundle.util.jbackup:2.0.0"
    compile "net.sf.webtestfixtures:webtestfixtures:2.0.1.3"
}

uploadArchives {
    repositories {
       mavenDeployer {
             repository(url: "http://localhost:8081/nexus/content/repositories/snapshots") {
             authentication(userName: "admin", password: "admin123")
}
             pom.version = "1.0-SNAPSHOT"
             pom.artifactId = "simple-project"
             pom.groupId = "com.example"
       }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'My Library'
                description = 'A concise description of my library'
                url = 'http://www.example.com/library'
                properties = [
                    myProp: "value",
                    "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'johnd'
                        name = 'John Doe'
                        email = 'john.doe@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
        }
    }
}